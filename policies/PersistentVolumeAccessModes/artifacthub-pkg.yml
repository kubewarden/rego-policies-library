# Kubewarden Artifacthub Package config
#
# Use this config to submit the policy to https://artifacthub.io.
#
# This config can be saved to its default location with:
#   kwctl scaffold artifacthub > artifacthub-pkg.yml 
version: 1.0.0
name: persistent-volume-access-modes
displayName: Persistent Volume Access Modes
createdAt: 2025-03-04T11:58:06.128572205Z
description: |
  A PersistentVolume can be mounted on a host in any way supported by the resource provider. As shown in the table below, providers will have different capabilities and each PV's access modes are set to the specific modes supported by that particular volume. For example, NFS can support multiple read/write clients, but a specific NFS PV might be exported on the server as read-only. Each PV gets its own set of access modes describing that specific PV's capabilities.

  The access modes are:

  * ReadWriteOnce
  * ReadOnlyMany
  * ReadWriteMany
  * ReadWriteOncePod
license: Apache-2.0
homeURL: https://github.com/kubewarden/rego-policies-library
containersImages:
- name: policy
  image: ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.0
links:
- name: policy
  url: https://github.com/kubewarden/rego-policies-library/releases/download/PersistentVolumeAccessModes%2Fv1.0.0/policy.wasm
- name: source
  url: https://github.com/kubewarden/rego-policies-library
install: |
  The policy can be obtained using [`kwctl`](https://github.com/kubewarden/kwctl):
  ```console
  kwctl pull ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.0
  ```
  Then, generate the policy manifest and tune it to your liking. For example:
  ```console
  kwctl scaffold manifest -t ClusterAdmissionPolicy registry://ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.0
  ```
maintainers:
- name: Kubewarden developers
  email: cncf-kubewarden-maintainers@lists.cncf.io
provider:
  name: kubewarden
recommendations:
- url: https://artifacthub.io/packages/helm/kubewarden/kubewarden-controller
annotations:
  kubewarden/mutation: 'false'
  kubewarden/resources: PersistentVolume
  kubewarden/rules: |
    - apiGroups:
      - ''
      apiVersions:
      - v1
      resources:
      - persistentvolumes
      operations:
      - CREATE
      - UPDATE
